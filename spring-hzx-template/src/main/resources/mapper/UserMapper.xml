<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzx.lesson.mapper.UserMapper">

    <resultMap type="com.hzx.lesson.model.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="userType" column="user_type" jdbcType="INTEGER"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="initial" column="initial" jdbcType="INTEGER"/>
        <result property="passwordUpdateTime" column="password_update_time" jdbcType="INTEGER"/>
        <result property="lastLoginTime" column="last_login_time" jdbcType="INTEGER"/>
        <result property="memo" column="memo" jdbcType="VARCHAR"/>
        <result property="operatorId" column="operator_id" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select id,
               username,
               nickname,
               user_type,
               password,
               initial,
               password_update_time,
               last_login_time,
               memo,
               operator_id,
               created_at,
               updated_at
        from user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
        id, username, nickname, user_type, password, initial, password_update_time, last_login_time, memo, operator_id, created_at, updated_at
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname = #{nickname}
            </if>
            <if test="userType != null">
                and user_type = #{userType}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="initial != null">
                and initial = #{initial}
            </if>
            <if test="passwordUpdateTime != null">
                and password_update_time = #{passwordUpdateTime}
            </if>
            <if test="lastLoginTime != null">
                and last_login_time = #{lastLoginTime}
            </if>
            <if test="memo != null and memo != ''">
                and memo = #{memo}
            </if>
            <if test="operatorId != null">
                and operator_id = #{operatorId}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname = #{nickname}
            </if>
            <if test="userType != null">
                and user_type = #{userType}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="initial != null">
                and initial = #{initial}
            </if>
            <if test="passwordUpdateTime != null">
                and password_update_time = #{passwordUpdateTime}
            </if>
            <if test="lastLoginTime != null">
                and last_login_time = #{lastLoginTime}
            </if>
            <if test="memo != null and memo != ''">
                and memo = #{memo}
            </if>
            <if test="operatorId != null">
                and operator_id = #{operatorId}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(username, nickname, user_type, password, initial, password_update_time, last_login_time, memo, operator_id, created_at, updated_at)
        values (#{username}, #{nickname}, #{userType}, #{password}, #{initial}, #{passwordUpdateTime}, #{lastLoginTime}, #{memo}, #{operatorId}, #{createdAt}, #{updatedAt})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(username, nickname, user_type, password, initial, password_update_time, last_login_time, memo, operator_id, created_at, updated_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.nickname}, #{entity.userType}, #{entity.password}, #{entity.initial}, #{entity.passwordUpdateTime}, #{entity.lastLoginTime}, #{entity.memo},
            #{entity.operatorId}, #{entity.createdAt}, #{entity.updatedAt})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(username, nickname, user_type, password, initial, password_update_time, last_login_time, memo, operator_id, created_at, updated_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.nickname}, #{entity.userType}, #{entity.password}, #{entity.initial}, #{entity.passwordUpdateTime}, #{entity.lastLoginTime}, #{entity.memo},
            #{entity.operatorId}, #{entity.createdAt}, #{entity.updatedAt})
        </foreach>
        on duplicate key update
        username = values(username),
        nickname = values(nickname),
        user_type = values(user_type),
        password = values(password),
        initial = values(initial),
        password_update_time = values(password_update_time),
        last_login_time = values(last_login_time),
        memo = values(memo),
        operator_id = values(operator_id),
        created_at = values(created_at),
        updated_at = values(updated_at)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname},
            </if>
            <if test="userType != null">
                user_type = #{userType},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="initial != null">
                initial = #{initial},
            </if>
            <if test="passwordUpdateTime != null">
                password_update_time = #{passwordUpdateTime},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime},
            </if>
            <if test="memo != null and memo != ''">
                memo = #{memo},
            </if>
            <if test="operatorId != null">
                operator_id = #{operatorId},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from user
        where id = #{id}
    </delete>

</mapper>

